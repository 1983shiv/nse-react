import Head from 'next/head';
import React, { useState, useEffect } from 'react';
import Image from 'next/image';

import Header from '../components/Header';
import TopCards from '../components/TopCards';
import BarChart from '../components/BarChart';
import RecentOrders from '../components/RecentOrders';

export default function Home() {
  const [all, setAll] = useState([]);
  const [loading, setLoading] = useState(true);
  const [time, setTime] = useState('');
  const [cp, setCp] = useState('');
  const [csp, setCsp] = useState('');
  const [oi, setOi] = useState([]);
  const [coi, setCoi] = useState([]);
  const [voiData, setVoiData] = useState([]);
  const [prmdecay, setPrmdecay] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      const response = await fetch('http://127.0.0.1:5000/api/data');
      const json = await response.json();
      return json
    };
    fetchData().then((newData) => {
      setAll(newData)
      setTime(newData.time)
      setCp(newData.cp)
      setCsp(newData.csp)
      setOi(newData.oi)
      setCoi(newData.coi)
      // setVoiData(newData.voi_data)
      let values = []
      for (const obj of newData.prmdecay) {
        const { strikePrice, cedecay, pedecay } = obj;
        values.push({
          "sp": strikePrice,
          "ccoi": cedecay.toFixed(2),
          "pcoi":pedecay.toFixed(2)
          });
      }
      setPrmdecay(values)
      console.log("first_void", newData.time)
    });

    setLoading(false);

  }, []);

  useEffect(() => {
    const fetchData = async () => {
      const response = await fetch('http://127.0.0.1:5000/api/data');
      const json = await response.json();
      return json
    };
    

    // set up interval to fetch data every 2 minutes
    const interval = setInterval(() => {
      fetchData().then((newData) => {
        setAll(prevData => [...(prevData || []), ...newData])
        setTime(newData.time)
        setCp(newData.cp)
        setCsp(newData.csp)
        setOi(newData.oi)
        setCoi(newData.coi)
        // setVoiData(newData.voi_data)
        let values = []
        for (const obj of newData.prmdecay) {
          const { strikePrice, cedecay, pedecay } = obj;
          values.push({
            "sp": strikePrice,
            "ccoi": cedecay.toFixed(2),
            "pcoi":pedecay.toFixed(2)
            });
        }
        setPrmdecay(values)
        console.log("All Data", all)
    });
    }, 1 * 20 * 1000); // 2 minutes in milliseconds

    setLoading(false);

    // clean up the interval on unmount
    return () => clearInterval(interval);

  }, [oi, time]);

  if (loading) {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>NSE Option Chart - Analysis</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='bg-gray-100 min-h-screen'>
        <Header />
        <TopCards time={time} cp={cp} csp={csp} />
        <div className='p-4 grid md:grid-cols-4 sm:grid-cols-1 gap-4'>
          {oi.length > 0 && <BarChart coi={oi} title={"Open Interest Chart"} />}
          {coi.length > 0 && <BarChart coi={coi} title={"Change In Open Interest Chart"} />}
        </div>
        <div className='p-4 grid md:grid-cols-4 sm:grid-cols-1 gap-4'>
          {prmdecay.length > 0 && <BarChart coi={prmdecay} title={"Premium Decay Chart"} />}
          {/* {voiData.length > 0 && <BarChart coi={voiData} title={"Volume/OI Data Chart"} />} */}
        </div>
      </main>
    </>
  );
}
